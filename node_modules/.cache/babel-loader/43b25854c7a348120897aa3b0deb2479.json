{"ast":null,"code":"var _jsxFileName = \"/Users/krystlenoweski/Krystle-capstone-wireframe/src/CircleButton/CircleButton.js\";\nimport React from 'react';\nimport './CircleButton.css';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nexport default function NavCircleButton(props) {\n  var tag = props.tag,\n      type = props.type,\n      to = props.to,\n      role = props.role,\n      className = props.className,\n      onClick = props.onClick,\n      children = props.children;\n  var CustomElementName = tag === 'link' ? Link : tag;\n\n  var renderCustomElement = function renderCustomElement() {\n    // render element as a Link\n    if (type && to) {\n      return React.createElement(\"div\", {\n        className: \"CircleButtonLink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(CustomElementName, {\n        className: 'NavCircleButton ' + className,\n        type: type,\n        to: to,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, children));\n    } // render element as a button\n\n\n    if (onClick && role) {\n      return React.createElement(\"div\", {\n        className: \"CircleButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(CustomElementName, {\n        className: 'NavCircleButton ' + className,\n        onClick: onClick,\n        role: role,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, children));\n    }\n  };\n\n  return renderCustomElement();\n}\nNavCircleButton.defaultProps = {\n  tag: 'button'\n};\nNavCircleButton.propTypes = {\n  tag: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n  type: PropTypes.string,\n  to: PropTypes.string,\n  role: PropTypes.string,\n  onClick: PropTypes.func\n};","map":{"version":3,"sources":["/Users/krystlenoweski/Krystle-capstone-wireframe/src/CircleButton/CircleButton.js"],"names":["React","PropTypes","Link","NavCircleButton","props","tag","type","to","role","className","onClick","children","CustomElementName","renderCustomElement","defaultProps","propTypes","string","isRequired","element","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,MACrCC,GADqC,GACiBD,KADjB,CACrCC,GADqC;AAAA,MAChCC,IADgC,GACiBF,KADjB,CAChCE,IADgC;AAAA,MAC1BC,EAD0B,GACiBH,KADjB,CAC1BG,EAD0B;AAAA,MACtBC,IADsB,GACiBJ,KADjB,CACtBI,IADsB;AAAA,MAChBC,SADgB,GACiBL,KADjB,CAChBK,SADgB;AAAA,MACLC,OADK,GACiBN,KADjB,CACLM,OADK;AAAA,MACIC,QADJ,GACiBP,KADjB,CACIO,QADJ;AAG7C,MAAMC,iBAAiB,GAAGP,GAAG,KAAK,MAAR,GAAiBH,IAAjB,GAAwBG,GAAlD;;AACA,MAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAEhC;AACA,QAAIP,IAAI,IAAIC,EAAZ,EAAgB;AACd,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAE,qBAAqBE,SAAnD;AACE,QAAA,IAAI,EAAEH,IADR;AAEE,QAAA,EAAE,EAAEC,EAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGI,QAJH,CADF,CADF;AAUD,KAd+B,CAgBhC;;;AACA,QAAID,OAAO,IAAIF,IAAf,EAAoB;AAClB,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,SAAS,EAAE,qBAAqBC,SAAnD;AACE,QAAA,OAAO,EAAEC,OADX;AAEE,QAAA,IAAI,EAAEF,IAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGG,QAJH,CADF,CADF;AAUD;AACF,GA7BD;;AA+BA,SACEE,mBAAmB,EADrB;AAGD;AAEDV,eAAe,CAACW,YAAhB,GAA8B;AAC5BT,EAAAA,GAAG,EAAE;AADuB,CAA9B;AAIAF,eAAe,CAACY,SAAhB,GAA4B;AAC1BV,EAAAA,GAAG,EAAEJ,SAAS,CAACe,MAAV,CAAiBC,UADI;AAE1BR,EAAAA,SAAS,EAAER,SAAS,CAACe,MAAV,CAAiBC,UAFF;AAG1BN,EAAAA,QAAQ,EAAEV,SAAS,CAACiB,OAAV,CAAkBD,UAHF;AAI1BX,EAAAA,IAAI,EAAEL,SAAS,CAACe,MAJU;AAK1BT,EAAAA,EAAE,EAAEN,SAAS,CAACe,MALY;AAM1BR,EAAAA,IAAI,EAAEP,SAAS,CAACe,MANU;AAO1BN,EAAAA,OAAO,EAAET,SAAS,CAACkB;AAPO,CAA5B","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nexport default function NavCircleButton(props) {\n  const { tag, type, to, role, className, onClick, children } = props\n\n  const CustomElementName = tag === 'link' ? Link : tag;\n  const renderCustomElement = () => {\n\n    // render element as a Link\n    if (type && to) {\n      return (\n        <div className=\"CircleButtonLink\">\n          <CustomElementName className={'NavCircleButton ' + className}\n            type={type}\n            to={to}\n          >\n            {children}\n          </CustomElementName>\n        </div>\n      )\n    }\n    \n    // render element as a button\n    if (onClick && role){\n      return (\n        <div className=\"CircleButton\">\n          <CustomElementName className={'NavCircleButton ' + className}\n            onClick={onClick}\n            role={role}\n          >\n            {children}\n          </CustomElementName>\n        </div>\n      )\n    }\n  }\n\n  return (\n    renderCustomElement()\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'button',\n}\n\nNavCircleButton.propTypes = {\n  tag: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n  type: PropTypes.string,\n  to: PropTypes.string,\n  role: PropTypes.string,\n  onClick: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}