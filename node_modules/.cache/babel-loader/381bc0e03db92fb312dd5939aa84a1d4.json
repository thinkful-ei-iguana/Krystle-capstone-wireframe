{"ast":null,"code":"import _classCallCheck from \"/Users/krystlenoweski/Krystle-capstone-wireframe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/krystlenoweski/Krystle-capstone-wireframe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/krystlenoweski/Krystle-capstone-wireframe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/krystlenoweski/Krystle-capstone-wireframe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/krystlenoweski/Krystle-capstone-wireframe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/krystlenoweski/Krystle-capstone-wireframe/src/NoteListNav/NoteListNav.js\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport CircleButton from '../CircleButton/CircleButton';\nimport ApiContext from '../ApiContext';\nimport { countNotesForFolder } from '../notes-helpers';\nimport './NoteListNav.css';\nimport config from '../config';\n\nvar NoteListNav =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NoteListNav, _React$Component);\n\n  function NoteListNav() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NoteListNav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NoteListNav)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClickDelete = function (folderId) {\n      fetch(\"\".concat(config.API_ENDPOINT, \"/folders/\").concat(folderId), {\n        method: 'DELETE',\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(function (res) {\n        if (!res.ok) return res.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        return res.json();\n      }).then(function () {\n        _this.context.deleteFolder(folderId);\n      }).catch(function (error) {\n        console.error({\n          error: error\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NoteListNav, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$context = this.context,\n          _this$context$folders = _this$context.folders,\n          folders = _this$context$folders === void 0 ? [] : _this$context$folders,\n          _this$context$notes = _this$context.notes,\n          notes = _this$context$notes === void 0 ? [] : _this$context$notes;\n      return React.createElement(\"div\", {\n        className: \"NoteListNav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"NoteListNav__list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, folders.map(function (folder) {\n        return React.createElement(\"li\", {\n          key: folder.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          className: \"NoteListNav__folder-link\",\n          to: \"/folder/\".concat(folder.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"NoteListNav__num-notes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, countNotesForFolder(notes, folder.id)), folder.name), React.createElement(\"button\", {\n          className: \"Note__delete\",\n          type: \"button\",\n          onClick: function onClick() {\n            return _this2.handleClickDelete(folder.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(FontAwesomeIcon, {\n          icon: \"trash-alt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }), ' ', \"remove\"));\n      })), React.createElement(\"div\", {\n        className: \"NoteListNav__button-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(CircleButton, {\n        tag: \"link\",\n        to: \"/add-folder\",\n        type: \"button\",\n        className: \"NoteListNav__add-folder-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(React.Fragment, null, React.createElement(FontAwesomeIcon, {\n        icon: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), \"Folder\"))));\n    }\n  }]);\n\n  return NoteListNav;\n}(React.Component);\n\nNoteListNav.contextType = ApiContext;\nexport { NoteListNav as default };","map":{"version":3,"sources":["/Users/krystlenoweski/Krystle-capstone-wireframe/src/NoteListNav/NoteListNav.js"],"names":["React","NavLink","FontAwesomeIcon","CircleButton","ApiContext","countNotesForFolder","config","NoteListNav","handleClickDelete","folderId","fetch","API_ENDPOINT","method","headers","then","res","ok","json","e","Promise","reject","context","deleteFolder","catch","error","console","folders","notes","map","folder","id","name","Component","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\nimport config from '../config'\n\nexport default class NoteListNav extends React.Component {\n\n  static contextType = ApiContext;\n\n  handleClickDelete = (folderId) => {\n    fetch(`${config.API_ENDPOINT}/folders/${folderId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.context.deleteFolder(folderId);\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { folders = [], notes = [] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n              <button\n                className='Note__delete'\n                type='button'\n                onClick={() => this.handleClickDelete(folder.id)}\n              >\n                <FontAwesomeIcon icon='trash-alt' />\n                {' '}\n                remove\n              </button>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag='link'\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <>\n              <FontAwesomeIcon icon='plus' />\n              <br />\n              Folder\n            </>\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}