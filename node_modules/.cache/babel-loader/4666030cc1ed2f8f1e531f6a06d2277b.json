{"ast":null,"code":"export var findFolder = function findFolder() {\n  var folders = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folderId = arguments.length > 1 ? arguments[1] : undefined;\n  var folder;\n\n  if (folders && folders.length > 0 && folderId) {\n    folder = folders.find(function (folder) {\n      return folder.id.toString() === folderId.toString();\n    });\n  }\n\n  return folder;\n};\nexport var findNote = function findNote() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var noteId = arguments.length > 1 ? arguments[1] : undefined;\n  var note;\n\n  if (notes && notes.length > 0 && noteId) {\n    note = notes.find(function (note) {\n      return note.id.toString() === noteId.toString();\n    });\n  }\n\n  return note;\n};\nexport var getNotesForFolder = function getNotesForFolder() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folderId = arguments.length > 1 ? arguments[1] : undefined;\n  return !folderId ? notes : notes.filter(function (note) {\n    return note.folderId === folderId;\n  });\n};\nexport var countNotesForFolder = function countNotesForFolder() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folderId = arguments.length > 1 ? arguments[1] : undefined;\n  return notes.filter(function (note) {\n    return note.folderId === folderId;\n  }).length;\n};","map":{"version":3,"sources":["/Users/krystlenoweski/Krystle-capstone-wireframe/src/notes-helpers.js"],"names":["findFolder","folders","folderId","folder","length","find","id","toString","findNote","notes","noteId","note","getNotesForFolder","filter","countNotesForFolder"],"mappings":"AACA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,GAA4B;AAAA,MAA3BC,OAA2B,uEAAjB,EAAiB;AAAA,MAAbC,QAAa;AACpD,MAAIC,MAAJ;;AACA,MAAIF,OAAO,IAAIA,OAAO,CAACG,MAAR,GAAiB,CAA5B,IAAiCF,QAArC,EAA+C;AAC7CC,IAAAA,MAAM,GAAGF,OAAO,CAACI,IAAR,CAAa,UAAAF,MAAM;AAAA,aAAIA,MAAM,CAACG,EAAP,CAAUC,QAAV,OAAyBL,QAAQ,CAACK,QAAT,EAA7B;AAAA,KAAnB,CAAT;AACD;;AACD,SAAOJ,MAAP;AACD,CANM;AAQP,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAC9C,MAAIC,IAAJ;;AACA,MAAIF,KAAK,IAAIA,KAAK,CAACL,MAAN,GAAe,CAAxB,IAA6BM,MAAjC,EAAyC;AACvCC,IAAAA,IAAI,GAAGF,KAAK,CAACJ,IAAN,CAAW,UAAAM,IAAI;AAAA,aAAIA,IAAI,CAACL,EAAL,CAAQC,QAAR,OAAuBG,MAAM,CAACH,QAAP,EAA3B;AAAA,KAAf,CAAP;AACD;;AACD,SAAOI,IAAP;AACD,CANM;AAQP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAACH,KAAD,uEAAS,EAAT;AAAA,MAAaP,QAAb;AAAA,SAC9B,CAACA,QAAF,GACIO,KADJ,GAEIA,KAAK,CAACI,MAAN,CAAa,UAAAF,IAAI;AAAA,WAAIA,IAAI,CAACT,QAAL,KAAkBA,QAAtB;AAAA,GAAjB,CAH2B;AAAA,CAA1B;AAMP,OAAO,IAAMY,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,MAACL,KAAD,uEAAS,EAAT;AAAA,MAAaP,QAAb;AAAA,SACjCO,KAAK,CAACI,MAAN,CAAa,UAAAF,IAAI;AAAA,WAAIA,IAAI,CAACT,QAAL,KAAkBA,QAAtB;AAAA,GAAjB,EAAiDE,MADhB;AAAA,CAA5B","sourcesContent":["\nexport const findFolder = (folders = [], folderId) => {\n  let folder;\n  if (folders && folders.length > 0 && folderId) {\n    folder = folders.find(folder => folder.id.toString() === folderId.toString())\n  }\n  return folder\n}\n\nexport const findNote = (notes = [], noteId) => {\n  let note;\n  if (notes && notes.length > 0 && noteId) {\n    note = notes.find(note => note.id.toString() === noteId.toString())\n  }\n  return note\n}\n\nexport const getNotesForFolder = (notes = [], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes = [], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n"]},"metadata":{},"sourceType":"module"}