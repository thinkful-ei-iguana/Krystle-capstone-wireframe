{"ast":null,"code":"import _classCallCheck from \"/Users/krystlenoweski/Krystle-capstone-wireframe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/krystlenoweski/Krystle-capstone-wireframe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/krystlenoweski/Krystle-capstone-wireframe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/krystlenoweski/Krystle-capstone-wireframe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/krystlenoweski/Krystle-capstone-wireframe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/krystlenoweski/Krystle-capstone-wireframe/src/ListMain/ListMain.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Note from '../Note/Note';\nimport CircleButton from '../CircleButton/CircleButton';\nimport ApiContext from '../ApiContext';\nimport { getNotesForFolder } from '../notes-helpers';\nimport './ListMain.css';\nimport PropTypes from 'prop-types';\n\nvar ListMain =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListMain, _React$Component);\n\n  function ListMain() {\n    _classCallCheck(this, ListMain);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListMain).apply(this, arguments));\n  }\n\n  _createClass(ListMain, [{\n    key: \"render\",\n    value: function render() {\n      var folderId = this.props.match.params.folderId;\n      var _this$context$notes = this.context.notes,\n          notes = _this$context$notes === void 0 ? [] : _this$context$notes;\n      var notesForFolder = getNotesForFolder(notes, folderId);\n      return React.createElement(\"section\", {\n        className: \"ListMain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, notesForFolder.map(function (note) {\n        return React.createElement(\"li\", {\n          key: note.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(Note, {\n          id: note.id,\n          name: note.name,\n          modified: note.modified,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }));\n      })), React.createElement(\"div\", {\n        className: \"ListMain__button-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(CircleButton, {\n        tag: \"link\",\n        to: \"/add-note\",\n        type: \"button\",\n        className: \"ListMain__add-note-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(React.Fragment, null, React.createElement(FontAwesomeIcon, {\n        icon: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), \"Note\"))));\n    }\n  }]);\n\n  return ListMain;\n}(React.Component);\n\nListMain.defaultProps = {\n  match: {\n    params: {}\n  }\n};\nListMain.contextType = ApiContext;\nexport { ListMain as default };\nListMain.propTypes = {\n  params: PropTypes.object\n};","map":{"version":3,"sources":["/Users/krystlenoweski/Krystle-capstone-wireframe/src/ListMain/ListMain.js"],"names":["React","FontAwesomeIcon","Note","CircleButton","ApiContext","getNotesForFolder","PropTypes","ListMain","folderId","props","match","params","context","notes","notesForFolder","map","note","id","name","modified","Component","defaultProps","contextType","propTypes","object"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEqBC,Q;;;;;;;;;;;;;6BAQV;AAAA,UACCC,QADD,GACc,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAD/B,CACCH,QADD;AAAA,gCAEgB,KAAKI,OAFrB,CAECC,KAFD;AAAA,UAECA,KAFD,oCAES,EAFT;AAGP,UAAMC,cAAc,GAAGT,iBAAiB,CAACQ,KAAD,EAAQL,QAAR,CAAxC;AACA,aACE;AAAS,QAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGM,cAAc,CAACC,GAAf,CAAmB,UAAAC,IAAI;AAAA,eACtB;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AACE,UAAA,EAAE,EAAED,IAAI,CAACC,EADX;AAEE,UAAA,IAAI,EAAED,IAAI,CAACE,IAFb;AAGE,UAAA,QAAQ,EAAEF,IAAI,CAACG,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADsB;AAAA,OAAvB,CADH,CADF,EAYE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,GAAG,EAAC,MADN;AAEE,QAAA,EAAE,EAAC,WAFL;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,SAAS,EAAC,2BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,0CACE,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,SANF,CADF,CAZF,CADF;AA6BD;;;;EAzCmCnB,KAAK,CAACoB,S;;AAAvBb,Q,CACZc,Y,GAAe;AACpBX,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH;AADa,C;AADHJ,Q,CAMZe,W,GAAclB,U;SANFG,Q;AA4CrBA,QAAQ,CAACgB,SAAT,GAAqB;AACnBZ,EAAAA,MAAM,EAAEL,SAAS,CAACkB;AADC,CAArB","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './ListMain.css'\nimport PropTypes from 'prop-types';\n\nexport default class ListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes = [] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folderId)\n    return (\n      <section className='ListMain'>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='ListMain__button-container'>\n          <CircleButton\n            tag='link'\n            to='/add-note'\n            type='button'\n            className='ListMain__add-note-button'\n          >\n            <>\n              <FontAwesomeIcon icon='plus' />\n              <br />\n              Note\n            </>\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}\n\nListMain.propTypes = {\n  params: PropTypes.object\n}\n"]},"metadata":{},"sourceType":"module"}